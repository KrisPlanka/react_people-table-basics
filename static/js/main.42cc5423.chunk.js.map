{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavigation/PageNavigation.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","memo","person","to","slug","cn","sex","name","PeoplePage","useParams","useState","people","setPeople","isPeopleLoading","setIsPeopleLoading","isPeopleError","setIsPeopleError","isSelected","useEffect","catch","finally","findParent","parent","find","pers","length","map","born","died","motherName","fatherName","PageNavigation","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.42cc5423.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { getPeople } from '../../api';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [isPeopleError, setIsPeopleError] = useState(false);\n\n  const isSelected = (person: Person) => person.slug === slug;\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsPeopleError(true))\n      .finally(() => setIsPeopleLoading(false));\n  }, []);\n\n  const findParent = (name: string) => {\n    const parent = people.find(pers => pers.name === name);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : name;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isPeopleLoading && (\n            <Loader />\n          )}\n          {!people.length && !isPeopleLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              // eslint-disable-next-line max-len\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    className={cn({\n                      // eslint-disable-next-line max-len\n                      'has-background-warning': isSelected(person),\n                    })}\n                    key={person.slug}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.motherName\n                        ? findParent(person.motherName)\n                        : (person.motherName || '-')}\n                    </td>\n                    <td>\n                      {person.fatherName\n                        ? findParent(person.fatherName)\n                        : (person.fatherName || '-')}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n          {isPeopleError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string\n};\n\nexport const PageNavigation: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    to={to}\n    className={\n      ({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )\n    }\n  >\n    {text}\n  </NavLink>\n));\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNavigation } from './components/PageNavigation/PageNavigation';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavigation to=\"/\" text=\"Home\" />\n            <PageNavigation to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}