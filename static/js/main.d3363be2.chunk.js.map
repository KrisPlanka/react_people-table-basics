{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonPage/PersonPage.tsx","components/constants/constants.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavigation/PageNavigation.tsx","components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","memo","person","to","slug","cn","sex","name","PersonPage","selectedperson","people","useParams","findParent","parent","find","pers","born","died","motherName","fatherName","tableHeaders","id","title","PeoplePage","useState","setPeople","isPeopleLoading","setIsPeopleLoading","isPeopleError","setIsPeopleError","useEffect","catch","finally","length","map","header","PageNavigation","text","isActive","NavBar","role","HomePage","ErrorPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d3363be2.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink:FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { useParams } from 'react-router-dom';\nimport { memo } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonPage: React.FC<Props> = memo(({ person, people }) => {\n  const { slug = '' } = useParams();\n\n  const isSelected = (selectedperson: Person) => selectedperson.slug === slug;\n\n  const findParent = (name: string) => {\n    const parent = people.find(pers => pers.name === name);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : name;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': isSelected(person),\n      })}\n      key={person.slug}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.motherName\n          ? findParent(person.motherName)\n          : (person.motherName || '-')}\n      </td>\n      <td>\n        {person.fatherName\n          ? findParent(person.fatherName)\n          : (person.fatherName || '-')}\n      </td>\n    </tr>\n  );\n});\n","export const tableHeaders = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n","import React, { useState, useEffect } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { getPeople } from '../../api';\nimport { PersonPage } from '../PersonPage/PersonPage';\nimport { tableHeaders } from '../constants/constants';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [isPeopleError, setIsPeopleError] = useState(false);\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsPeopleError(true))\n      .finally(() => setIsPeopleLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isPeopleLoading && (\n            <Loader />\n          )}\n\n          {isPeopleError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isPeopleLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\" className=\"box-error\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table\n                is-striped\n                is-hoverable\n                is-narrow\n                is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  {tableHeaders.map(header => (\n                    <th key={header.id}>\n                      {header.title}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonPage\n                    key={person.slug}\n                    person={person}\n                    people={people}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC, memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string\n};\n\nexport const PageNavigation: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    to={to}\n    className={\n      ({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )\n    }\n  >\n    {text}\n  </NavLink>\n));\n","import { FC, memo } from 'react';\nimport { PageNavigation } from '../PageNavigation/PageNavigation';\n\nexport const NavBar: FC = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavigation to=\"/\" text=\"Home\" />\n        <PageNavigation to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n));\n","import { FC, memo } from 'react';\n\nexport const HomePage: FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { FC, memo } from 'react';\n\nexport const ErrorPage: FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { ErrorPage } from './components/ErrorPage/ErrorPage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}