{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/PageNavigation/PageNavigation.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useParams","slug","useState","people","setPeople","isPeopleLoading","setIsPeopleLoading","isPeopleError","setIsPeopleError","isSelected","person","useEffect","catch","finally","length","map","cn","to","sex","name","born","died","motherName","fatherName","PageNavigation","text","isActive","end","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"0RAEaA,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOf,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCPM,IAAMQ,EAAuB,WAClC,MAAsBC,cAAdC,YAAR,MAAe,GAAf,EACA,EAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EAAa,SAACC,GAAD,OAAoBA,EAAOT,OAASA,CAApC,EAUnB,OARAU,qBAAU,WACRL,GAAmB,GACnBhB,IACGK,KAAKS,GACLQ,OAAM,kBAAMJ,GAAiB,EAAvB,IACNK,SAAQ,kBAAMP,GAAmB,EAAzB,GACZ,GAAE,IAGD,qCACE,oBAAIjB,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UAEGgB,GACC,cAAC,EAAD,IAEDE,GACC,mBAAG,UAAQ,kBAAX,+CAKDJ,EAAOW,OAAS,GACf,wBACE,UAAQ,cAERzB,UAAU,uDAHZ,UAKE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGc,EAAOY,KAAI,SAAAL,GAAM,OAChB,qBACE,UAAQ,SACRrB,UAAW2B,IAAG,CAEZ,yBAA0BP,EAAWC,KAJzC,UAQE,6BACE,cAAC,IAAD,CACEO,GAAE,aAAQP,EAAOT,MACjBZ,UAAW2B,IAET,CAAE,kBAAkC,MAAfN,EAAOQ,MAJhC,SAOGR,EAAOS,SAGZ,6BAAKT,EAAOQ,MACZ,6BAAKR,EAAOU,OACZ,6BAAKV,EAAOW,OACZ,6BAAKX,EAAOY,YAAc,MAC1B,6BAAKZ,EAAOa,YAAc,QAjBrBb,EAAOT,KAPE,SA8BvBM,GACC,mBAAG,UAAQ,qBAAqBlB,UAAU,kBAA1C,yCAQX,ECtFYmC,EAA4B,SAAC,GAAD,IAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAP,OACvC,cAAC,IAAD,CACER,GAAIA,EACJ5B,UACE,gBAAGqC,EAAH,EAAGA,SAAH,OAAkBV,IAChB,cACA,CAAE,8BAA+BU,GAFnC,EAKFC,KAAG,EARL,SAUGF,GAXoC,ECA5BG,EAAgB,WAC3B,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRvC,UAAU,iCACVwC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKxC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAgB4B,GAAG,IAAIQ,KAAK,SAC5B,cAAC,EAAD,CAAgBR,GAAG,SAASQ,KAAK,kBAKvC,sBAAMpC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAK,IAAIC,QAAS,oBAAI1C,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOyC,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUd,GAAG,IAAIe,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAI1C,UAAU,QAAd,uCAOtB,ECpCD6C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.d29a70f8.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [isPeopleError, setIsPeopleError] = useState(false);\n\n  const isSelected = (person: Person) => person.slug === slug;\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsPeopleError(true))\n      .finally(() => setIsPeopleLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isPeopleLoading && (\n            <Loader />\n          )}\n          {isPeopleError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              // eslint-disable-next-line max-len\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    className={cn({\n                      // eslint-disable-next-line max-len\n                      'has-background-warning': isSelected(person),\n                    })}\n                    key={person.slug}\n                  >\n                    <td>\n                      <Link\n                        to={`../${person.slug}`}\n                        className={cn(\n                          // eslint-disable-next-line max-len\n                          { 'has-text-danger': person.sex === 'f' },\n                        )}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{person.motherName || '-'}</td>\n                    <td>{person.fatherName || '-'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n          {isPeopleError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string\n};\n\nexport const PageNavigation: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={\n      ({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )\n    }\n    end\n  >\n    {text}\n  </NavLink>\n);\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNavigation } from './components/PageNavigation/PageNavigation';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavigation to=\"/\" text=\"Home\" />\n            <PageNavigation to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  );\n"],"sourceRoot":""}